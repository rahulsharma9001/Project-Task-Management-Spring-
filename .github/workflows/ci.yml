name: CI Pipeline for Spring Boot + Docker

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build-and-dockerize:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build Spring Boot JAR with Maven
      - name: Build Spring Boot Application
        run: mvn clean package --no-transfer-progress

      # Step 4: Build Docker Image
      - name: Build Docker Image
        run: docker build -t project-task-management .

      # Step 5: Run Docker Container (for testing)
      - name: Run Docker Container
        run: docker run -d -p 8080:8080 --name springboot-container project-task-management

      # Step 6: Health Check (optional)
      - name: Wait and verify health endpoint
        run: |
          sleep 20
          curl --fail http://localhost:8080 || exit 1

      # Step 7: Docker Login (optional - push to DockerHub)
      - name: Login to Docker Hub
        if: ${{ DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 8: Push Image to Docker Hub (optional)
      - name: Push Docker Image
        if: ${{ secrets.DOCKER_USERNAME != '' && secrets.DOCKER_PASSWORD != '' }}
        run: |
          docker tag project-task-management ${{ secrets.DOCKER_USERNAME }}/project-task-management
          docker push ${{ secrets.DOCKER_USERNAME }}/project-task-management
